/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package projekakhir;

import java.text.SimpleDateFormat;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.HashMap;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author pick
 */
public class inventori extends javax.swing.JFrame {
    
    /**
     * Creates new form inventori
     */
    public inventori() {
        initComponents();
        
    }
    
     private static final HashMap<String, Double> hargaBarangSatuan = new HashMap<>();

    static {
        hargaBarangSatuan.put("Ramen", 15000.0);
        hargaBarangSatuan.put("Sushi", 30000.0);
        hargaBarangSatuan.put("Sashimi", 20000.0);
        hargaBarangSatuan.put("Takoyaki", 20000.0);
        hargaBarangSatuan.put("Udon", 25000.0);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        tambah = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        namabarang1 = new javax.swing.JLabel();
        jumlah1 = new javax.swing.JLabel();
        harga1 = new javax.swing.JLabel();
        kolomharga1 = new javax.swing.JTextField();
        kolomjumlah1 = new javax.swing.JTextField();
        namabarang2 = new javax.swing.JLabel();
        jcalender = new com.toedter.calendar.JDateChooser();
        kolonamabarang1 = new javax.swing.JComboBox<>();
        jPanel14 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listbarangmasuk = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        databarang = new javax.swing.JComboBox<>();
        enter = new javax.swing.JButton();
        simpan = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listtotal = new javax.swing.JTable();
        edit = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        stockriwayat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        barangriwayat = new javax.swing.JTextField();
        simpanriwayat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 255));

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jPanel10.setBackground(new java.awt.Color(51, 255, 51));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("INVENTORI RESTORAN");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel2)
                .addContainerGap(201, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel2)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel11.setBackground(new java.awt.Color(102, 102, 102));

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(tambah)
                .addContainerGap(460, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(tambah)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(153, 153, 153));
        jPanel12.setLayout(new java.awt.GridLayout(1, 0));

        jPanel13.setBackground(new java.awt.Color(204, 204, 204));

        namabarang1.setText("Nama Barang :");

        jumlah1.setText("Jumlah :");

        harga1.setText("Harga Barang :");

        kolomharga1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        namabarang2.setText("Tanggal :");

        kolonamabarang1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ramen", "Udon", "Sushi", "Sashimi", "Takoyaki" }));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(harga1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(kolomharga1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(namabarang1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(namabarang2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jcalender, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(kolonamabarang1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jumlah1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(kolomjumlah1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namabarang1)
                    .addComponent(kolonamabarang1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(namabarang2)
                    .addComponent(jcalender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kolomjumlah1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jumlah1))
                .addGap(26, 26, 26)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(harga1)
                    .addComponent(kolomharga1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel12.add(jPanel13);

        jPanel14.setBackground(new java.awt.Color(0, 102, 102));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 281, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 217, Short.MAX_VALUE)
        );

        jPanel12.add(jPanel14);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 589, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 483, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, 0)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("transaksi", jPanel3);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel15.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LIST BARANG RESTORAN");

        listbarangmasuk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama Barang", "Jumlah", "Tanggal Masuk", "Harga Total"
            }
        ));
        jScrollPane1.setViewportView(listbarangmasuk);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nama Barang");

        enter.setText("enter");
        enter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(databarang, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(enter)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(40, 40, 40))))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(databarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(enter)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel15, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("barang", jPanel2);

        simpan.setBackground(new java.awt.Color(0, 102, 102));

        listtotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nama", "Stock", "Total"
            }
        ));
        jScrollPane2.setViewportView(listtotal);

        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        jButton4.setText("HAPUS");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Stock");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Nama");

        simpanriwayat.setText("simpan");
        simpanriwayat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanriwayatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout simpanLayout = new javax.swing.GroupLayout(simpan);
        simpan.setLayout(simpanLayout);
        simpanLayout.setHorizontalGroup(
            simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simpanLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(simpanLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(74, 74, 74))
                    .addGroup(simpanLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(simpanLayout.createSequentialGroup()
                                .addComponent(barangriwayat, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(stockriwayat, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))
                            .addGroup(simpanLayout.createSequentialGroup()
                                .addComponent(simpanriwayat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(edit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addContainerGap(10, Short.MAX_VALUE))))))
        );
        simpanLayout.setVerticalGroup(
            simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(simpanLayout.createSequentialGroup()
                .addGroup(simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(simpanLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(23, 23, 23)
                        .addGroup(simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barangriwayat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(stockriwayat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(91, 91, 91)
                        .addGroup(simpanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(simpanriwayat)
                            .addComponent(edit)
                            .addComponent(jButton4)))
                    .addGroup(simpanLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("riwayat", simpan);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
       String namaBarang = (String) kolonamabarang1.getSelectedItem();
    String jumlahBarang = kolomjumlah1.getText();

    SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
    String tanggal = (jcalender.getDate() != null) ? dateFormat.format(jcalender.getDate()) : "";

    if (namaBarang == null || namaBarang.trim().isEmpty() || jumlahBarang.isEmpty() || tanggal.isEmpty()) {
        JOptionPane.showMessageDialog(new JFrame(), "Masukkan data terlebih dahulu", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        try {
            int jumlah = Integer.parseInt(jumlahBarang);

            if (!hargaBarangSatuan.containsKey(namaBarang)) {
                JOptionPane.showMessageDialog(new JFrame(), "Harga untuk barang ini tidak ditemukan", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            double hargaSatuan = hargaBarangSatuan.get(namaBarang);
            double hargaTotal = hargaSatuan * jumlah;

            kolomharga1.setText(String.valueOf(hargaTotal));

            DefaultTableModel model = (DefaultTableModel) listbarangmasuk.getModel();
            model.addRow(new Object[]{namaBarang, jumlah, tanggal, hargaTotal});

            DefaultComboBoxModel<String> combobaru = (DefaultComboBoxModel<String>) databarang.getModel();
            if (combobaru.getIndexOf(namaBarang) == -1) {
                databarang.addItem(namaBarang); 
            }

            String SUrl = "jdbc:MySQL://localhost:3307/inventoridapur";
            String SUser = "root";
            String SPass = "";
            Connection con = DriverManager.getConnection(SUrl, SUser, SPass);

            String query = "INSERT INTO listbarang (nama, jumlah, tanggal, harga) VALUES (?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, namaBarang);
            pst.setInt(2, jumlah);
            pst.setString(3, tanggal);
            pst.setDouble(4, hargaTotal);

            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan ke tabel dan database!");
            }

            kolomjumlah1.setText("");
            kolomharga1.setText(""); 
            jcalender.setDate(null);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(new JFrame(), "Jumlah harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JFrame(), "Error saat menambahkan data ke database: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_tambahActionPerformed

    private void enterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterActionPerformed
                                      
    String selectedBarang = (String) databarang.getSelectedItem();

    // Validasi input
    if (selectedBarang == null || selectedBarang.trim().isEmpty()) {
        JOptionPane.showMessageDialog(new JFrame(), "Pilih barang terlebih dahulu", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    DefaultTableModel modelBarangMasuk = (DefaultTableModel) listbarangmasuk.getModel();
    DefaultTableModel modelListTotal = (DefaultTableModel) listtotal.getModel();

    // Variabel untuk menghitung total
    int totalJumlah = 0;
    double totalHarga = 0;

    // Loop untuk mencari data di tabel listbarangmasuk
    for (int i = modelBarangMasuk.getRowCount() - 1; i >= 0; i--) {
        String namaBarang = (String) modelBarangMasuk.getValueAt(i, 0); // Ambil kolom nama barang
        if (namaBarang.equals(selectedBarang)) {
            // Tambahkan ke total
            int jumlah = (int) modelBarangMasuk.getValueAt(i, 1); // Ambil kolom jumlah
            double harga = (double) modelBarangMasuk.getValueAt(i, 3); // Ambil kolom harga

            totalJumlah += jumlah;
            totalHarga += harga;

            // Hapus data dari tabel listbarangmasuk
            modelBarangMasuk.removeRow(i);
        }
    }

    // Periksa apakah ada data yang ditemukan
    if (totalJumlah > 0 && totalHarga > 0) {
        // Tambahkan data terakumulasi ke tabel listtotal
        modelListTotal.addRow(new Object[]{selectedBarang, totalJumlah, totalHarga});

        // Simpan data ke tabel listtotal di database
        try {
            String SUrl = "jdbc:MySQL://localhost:3307/inventoridapur"; // Ubah sesuai URL database
            String SUser = "root"; // Ubah sesuai username database
            String SPass = ""; // Ubah sesuai password database
            Connection con = DriverManager.getConnection(SUrl, SUser, SPass);

            String query = "INSERT INTO listtotal (nama, stock, total) VALUES (?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setString(1, selectedBarang);
            pst.setInt(2, totalJumlah);
            pst.setDouble(3, totalHarga);

            int rowsAffected = pst.executeUpdate();
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Data berhasil dipindahkan!");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(new JFrame(), "Error saat menambahkan data ke database: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }

        // Hapus barang dari combobox kolonamabarang2
        databarang.removeItem(selectedBarang);
    } else {
        JOptionPane.showMessageDialog(new JFrame(), "Tidak ada data yang ditemukan untuk barang ini di tabel listbarangmasuk.", "Error", JOptionPane.ERROR_MESSAGE);
    }

    }//GEN-LAST:event_enterActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
          int selectedRow = listtotal.getSelectedRow();

    // Memeriksa apakah ada baris yang dipilih
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(new JFrame(), "Pilih barang dari tabel untuk mengedit", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Ambil data dari tabel listtotal yang dipilih
    String namaBarang = (String) listtotal.getValueAt(selectedRow, 0); // Nama barang
    int jumlahBarang = (int) listtotal.getValueAt(selectedRow, 1); // Jumlah barang
    double hargaTotal = (double) listtotal.getValueAt(selectedRow, 2); // Harga total

    // Menampilkan data ke textfield
    barangriwayat.setText(namaBarang); // Textfield untuk nama barang
    stockriwayat.setText(String.valueOf(jumlahBarang));
    }//GEN-LAST:event_editActionPerformed

    private void simpanriwayatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanriwayatActionPerformed
        // TODO add your handling code here:
      int selectedRow = listtotal.getSelectedRow();

    // Memeriksa apakah ada baris yang dipilih
    if (selectedRow == -1) {
        JOptionPane.showMessageDialog(new JFrame(), "Pilih barang dari tabel untuk mengedit", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Ambil data dari tabel listtotal yang dipilih
    String namaBarang = (String) listtotal.getValueAt(selectedRow, 0); // Nama barang
    int jumlahBarang = (int) listtotal.getValueAt(selectedRow, 1); // Jumlah barang
    double hargaTotal = (double) listtotal.getValueAt(selectedRow, 2); // Harga total

    // Menampilkan data ke textfield
    barangriwayat.setText(namaBarang); // Textfield untuk nama barang
    stockriwayat.setText(String.valueOf(jumlahBarang));

        try {
                // Ambil nilai dari textfield
                String newNamaBarang = barangriwayat.getText();
                int newJumlahBarang = Integer.parseInt(stockriwayat.getText());
                
                // Periksa apakah data sudah berubah
                if (newJumlahBarang != jumlahBarang) {
                    // Hitung harga baru
                    double hargaSatuan = hargaTotal / jumlahBarang; // Menghitung harga per unit
                    double newHargaTotal = hargaSatuan * newJumlahBarang; // Menghitung total harga baru

                    // Update jumlah dan harga di tabel listtotal
                    listtotal.setValueAt(newJumlahBarang, selectedRow, 1);
                    listtotal.setValueAt(newHargaTotal, selectedRow, 2);

                    // Simpan perubahan ke database
                    try {
                        String SUrl = "jdbc:MySQL://localhost:3307/inventoridapur"; // Ubah sesuai URL database
                        String SUser = "root"; // Ubah sesuai username database
                        String SPass = ""; // Ubah sesuai password database
                        Connection con = DriverManager.getConnection(SUrl, SUser, SPass);

                        String query = "UPDATE listtotal SET jumlah = ?, harga = ? WHERE nama = ?";
                        PreparedStatement pst = con.prepareStatement(query);
                        pst.setInt(1, newJumlahBarang);
                        pst.setDouble(2, newHargaTotal);
                        pst.setString(3, newNamaBarang);

                        int rowsAffected = pst.executeUpdate();
                        if (rowsAffected > 0) {
                            JOptionPane.showMessageDialog(null, "Data berhasil diupdate!");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(new JFrame(), "Error saat memperbarui data ke database: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(new JFrame(), "Jumlah harus berupa angka", "Error", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_simpanriwayatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventori.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventori().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barangriwayat;
    private javax.swing.JComboBox<String> databarang;
    private javax.swing.JButton edit;
    private javax.swing.JButton enter;
    private javax.swing.JLabel harga1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.toedter.calendar.JDateChooser jcalender;
    private javax.swing.JLabel jumlah1;
    private javax.swing.JTextField kolomharga1;
    private javax.swing.JTextField kolomjumlah1;
    private javax.swing.JComboBox<String> kolonamabarang1;
    private javax.swing.JTable listbarangmasuk;
    private javax.swing.JTable listtotal;
    private javax.swing.JLabel namabarang1;
    private javax.swing.JLabel namabarang2;
    private javax.swing.JPanel simpan;
    private javax.swing.JButton simpanriwayat;
    private javax.swing.JTextField stockriwayat;
    private javax.swing.JButton tambah;
    // End of variables declaration//GEN-END:variables
}
